---
title: "Aula_12"
author: "SOPHIA RA277230"
format: pdf
editor: visual
---

## Aula/Desafio 12

```{r}
Sys.time()
```

```{r}
getwd()
```

Importando bibliotecas

```{python}
import polars as pl
import sqlite3
```

```{python}
conn = sqlite3.connect('H:/Documentos/me315/disco.db')
cursor = conn.cursor()
```

## **Criação manual de uma tabela**

-   O método `execute` é empregado para executar comandos dentro do banco SQL.

    ```{python}
    cursor.execute('''CREATE TABLE IF NOT EXISTS vendas (
        id INTEGER PRIMARY KEY,
        vendedor TEXT,
        produto TEXT,
        valor REAL,
        data_venda DATE)''')
    ```

## **Inserção de dados em uma tabela**

-   Ao realizar uma inserção, deve-se executar o `commit`, que fará a confirmação da operação.

    ```{python}
    cursor.execute('''INSERT INTO vendas (vendedor, produto, valor, data_venda)
    VALUES
        ('Ana', 'Produto A', 120.5, '2024-09-01'),
        ('Carlos', 'Produto B', 200.0, '2024-10-02'),
        ('Ana', 'Produto C', 150.0, '2024-09-03'),
        ('Bruno', 'Produto A', 300.0, '2024-11-04'),
        ('Carlos', 'Produto C', 100.0, '2024-10-05');''')
    conn.commit()
    ```

## **Consulta simples no SQLite**

```{python}
cursor.execute("SELECT * FROM vendas")
rows = cursor.fetchall()
for row in rows:
  print(row)
#Estamos consultando as linhas da tabela vendas que acabamos de criar
```

## **Integração com Polars**

```{python}
dados = pl.read_database("SELECT * FROM vendas", conn)
print(dados)
```

**Exemplos**

1.  Qual é o total de vendas por vendedor?

    ```{python}
    vendas_total = pl.read_database('''
       SELECT vendedor, SUM(valor) as total_vendas
       FROM vendas
       GROUP BY vendedor;
    ''', conn)
    print(vendas_total)
    ```

2.  Qual é o valor médio de venda por vendedor?

    ```{python}
    vendas_medias = pl.read_database('''
       SELECT vendedor, AVG(valor) as total_vendas
       FROM vendas
       GROUP BY vendedor;
    ''', conn)
    print(vendas_medias)

    #AVG -> expressão que calcula o valor médio de um conjunto de linhas
    ```

3.  Crie uma tabela contendo o *nome do vendedor,* o *número de vendas* realizadas, o *total vendido e o valor médio por venda.*

```{python}
vendas_comb = pl.read_database("""
SELECT vendedor, 
       COUNT(*) as numero_vendas,
       SUM(valor) as total_vendas, 
       AVG(valor) as media_vendas
FROM vendas
GROUP BY vendedor;
""", conn)
print(vendas_comb)
```

4.  Quais foram as vendas de pelo menos 200,00?

    ```{python}
    ticket_alto = pl.read_database("""
    SELECT * FROM vendas WHERE valor >= 200
    """, conn)
    print(ticket_alto)
    ```

## **Operações com Datas em SQLite**

1.  Qual foi o volume total de vendas?

    ```{python}
    vendas_mensais = pl.read_database("""
    SELECT strftime('%Y-%m', data_venda) AS mes, SUM(valor) AS total_vendas
    FROM vendas GROUP BY mes ORDER BY mes
    """, conn)
    print(vendas_mensais)
    #Ele apenas "seleciona" o ano e o mês e chama a coluna de "mês"
    ```

## Criando a tabela de produtos

```{python}
cursor.execute('''
CREATE TABLE IF NOT EXISTS produtos (
    id INTEGER PRIMARY KEY,
    nome TEXT NOT NULL,
    categoria TEXT NOT NULL,
    preco REAL NOT NULL,
    estoque INTEGER NOT NULL
);
''')
cursor.execute('''
INSERT INTO produtos (nome, categoria, preco, estoque) VALUES
    ('Produto A', 'Categoria 1', 100.0, 50),
    ('Produto B', 'Categoria 2', 150.0, 30),
    ('Produto C', 'Categoria 1', 200.0, 20),
    ('Produto D', 'Categoria 2', 250.0, 10),
    ('Produto E', 'Categoria 3', 300.0, 0);
''')
conn.commit()
```

## Consultando a tabela de produtos

```{python}
prods = pl.read_database("SELECT * FROM produtos", conn)
print(prods)
```

-   Apresente uma tabela com o nome do produto, seu valor de compra e venda, além do lucro no momento da venda.

    ```{python}
    lucros = pl.read_database("""
    SELECT produto, valor AS compra, preco AS venda, preco-valor AS lucro
    FROM vendas
    INNER JOIN produtos ON vendas.produto = produtos.nome
    """, conn)
    print(lucros)
    ```

**Exemplos**

1.  Qual foi o valor médio por vendedor?7

    ```{python}
    lucro_medio = pl.read_database("""
    SELECT vendedor, produto, AVG(preco-valor) AS lucro_medio
    FROM vendas
    INNER JOIN produtos ON vendas.produto = produtos.nome
    GROUP BY vendedor
    """, conn)
    print(lucro_medio)
    ```

Disconectando banco de dados

```{python}
conn.close()
```
